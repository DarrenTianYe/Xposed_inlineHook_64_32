apply plugin: 'com.android.application'

android {
    compileSdkVersion 31
    ndkVersion '22.1.7171670'
    defaultConfig {
        applicationId "com.system.installer.acc"
        minSdkVersion 19
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        ndk {
            //选择要添加的对应cpu类型的.so库。
            abiFilters  'armeabi-v7a'
           // abiFilters  'arm64-v8a'
            // 还可以添加 armeabi-v7a
            // 'arm64-v8a', 64 bit ARM architecture,it can use v7 version
            //              unless you are too much concerned about performance
            // mips,mips64, There are no devices with MIPS
            //  x86_64, No android devices and anyway it can use X86 version
            //  armeabi, very old architecture. Unsupported after Android 4.4
            // 'x86', Intel based devices
        }
        externalNativeBuild {
            cmake {
                // 默认是thumb模式，现在指定arm 指令集编译
                arguments '-DANDROID_TOOLCHAIN=clang', '-DANDROID_ARM_MODE=arm'
                // 指定一些编译选项
//                cppFlags "-std=c++11 -frtti -fexceptions"
//                // 也可以使用下面这种语法向变量传递参数：
//
//
//
//                // arguments "-D变量名=参数".
//                arguments "-DANDROID_ARM_NEON=TRUE",
//                        // 使用下面这种语法向变量传递多个参数（参数之间使用空格隔开）：
//                        // arguments "-D变量名=参数1 参数2"
//                        "-DANDROID_CPP_FEATURES=rtti exceptions"
//
//                // 指定ABI
//                abiFilters "armeabi-v7a" , "arm64-v8a"
            }
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path file('src/main/cpp/CMakeLists.txt')

        }
    }
}

dependencies {
    compileOnly files('lib/XposedBridgeApi-54.jar')
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
